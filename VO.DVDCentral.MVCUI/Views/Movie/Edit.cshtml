@model VO.DVDCentral.MVCUI.ViewModels.MovieGenresDirectorsRatingsFormats

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<p class="text-danger">@ViewBag.Message</p>


@using (Html.BeginForm("Edit", "Movie", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4 class="ml-2">Movie</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Movie.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Movie.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Movie.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Movie.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Movie.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Movie.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Movie.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Movie.Cost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Movie.Cost, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Movie.Cost, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Movie.Genres, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.GenreIds, new MultiSelectList(Model.GenreList, "Id", "Description"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Movie.Genres, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Movie.RatingDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Movie.RatingId, new SelectList(Model.RatingList, "Id", "Description", Model.Movie), null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Movie.RatingId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Movie.FormatDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Movie.FormatId, new SelectList(Model.FormatList, "Id", "Description", Model.Movie), null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Movie.FormatId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Movie.DirectorName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Movie.DirectorId, new SelectList(Model.DirectorList, "Id", "FullName", Model.Movie), null, new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.Movie.DirectorId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Movie.InStkQty, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Movie.InStkQty, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Movie.InStkQty, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Movie.ImagePath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <img src="~/images/@Model.Movie.ImagePath" id="movieimage" class="imagepropmed" alt="@Model.Movie.Title" onclick="on('/images/@Model.Movie.ImagePath');" /><br /><br />
                <input type="file" name="File" id="File" accept="image/*" onchange="loadFile(event)" />
                @Html.ValidationMessageFor(model => model.Movie.ImagePath, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default btn-primary" />
            </div>
        </div>
    </div>
}

<div class="ml-2">
    @Html.ActionLink("Back to List", "Index")
</div>

<script>
    var loadFile = function (event) {
        var output = document.getElementById('movieimage');
        output.src = URL.createObjectURL(event.target.files[0]);
    }
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
